{"version":3,"sources":["webpack:///./src/components/Header.jsx","webpack:///./src/components/Cataloage/CataloageCategory.jsx","webpack:///./src/components/Cataloage/CataloageContent.jsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///./src/pages/cataloage.js"],"names":["Header","image","children","className","fluid","CataloageCategory","name","cataloage","map","catalog","index","to","toLowerCase","replace","primary","join","onClick","window","scrollTo","fixed","childImageSharp","alt","secondary","CataloageContent","React","forwardRef","ref","obj","TypeError","formatCataloageArr","cataloageArr","pdfs","filter","node","extension","images","pdf","myImage","publicURL","useStaticQuery","cataloageBaie","cataloageBucatarie","cataloageMobila","pardoseli","solutiiTehnice","useState","edges","cataloagePardoseli","cataloageTehnice","id","query","props","scrollTop","setScrollTop","scrollRef","useRef","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","Layout","data","cataloageHeader","Navigation","current","style","position","top"],"mappings":"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","file":"component---src-pages-cataloage-js-10012005d1171ee058a2.js","sourcesContent":["import React from \"react\"\nimport BackGroundImage from 'gatsby-background-image'\nimport \"./header.scss\"\n\nconst Header = ({ image, children, className }) => {\n    return (\n        <BackGroundImage fluid={image} className={`header-image ${className ? className : ''}`} >\n            {children}\n        </BackGroundImage>\n    )\n}\n\nexport default Header","import React from 'react'\nimport Image from 'gatsby-image'\nimport { Link } from \"gatsby\"\n\nconst CataloageCategory = ({ name, cataloage }) => {\n    return (\n        <div className=\"cataloage-category\">\n            <h2>{name}</h2>\n            <hr />\n\n            <div className=\"cataloage-category_content\">\n                {\n                    cataloage.map((catalog, index) => {\n                        return <div className=\"cataloage-category_content-group\">\n                            <Link to={\"/cataloage-open#\" + [name.toLowerCase().replace(/[\\s]/g, '-'), catalog.primary.replace(/[\\s]/g, '-').toLowerCase()].join('_')}\n                                onClick={() => window.scrollTo(0, 0)}>\n                                <Image fixed={catalog.image.childImageSharp.fixed} alt='catalog' />\n                                <p className=\"cataloage-category_content-group-secondary\">{catalog.secondary}</p>\n                            </Link>\n                            <hr />\n                            <p>{catalog.primary}</p>\n                        </div>\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\n\nexport default CataloageCategory","import React from 'react'\nimport \"./cataloage-content.scss\"\nimport CataloageCategory from './CataloageCategory'\nimport { useState } from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst cataloage = graphql`\n{\ncataloageBaie:allFile(filter:{relativeDirectory:{eq:\"cataloage/Baie\"}}){\n    edges{\n      node{\n          extension\n          publicURL\n          name\n          childImageSharp{\n          fixed(width:200,height:300){\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  }\n\n  cataloageBucatarie:allFile(filter:{relativeDirectory:{eq:\"cataloage/Bucatarie\"}}){\n    edges{\n      node{\n          extension\n          publicURL\n          name\n          childImageSharp{\n          fixed(width:200,height:300){\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  }\n\n  cataloageMobila:allFile(filter:{relativeDirectory:{eq:\"cataloage/Mobila\"}}){\n    edges{\n      node{\n          extension\n          publicURL\n          name\n          childImageSharp{\n          fixed(width:200,height:300){\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  }\n\n  pardoseli:allFile(filter:{relativeDirectory:{eq:\"cataloage/Pardoseli, Gresie si Faianta\"}}){\n    edges{\n      node{\n          extension\n          publicURL\n          name\n          childImageSharp{\n          fixed(width:200,height:300){\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  }\n\n  solutiiTehnice:allFile(filter:{relativeDirectory:{eq:\"cataloage/Solutii tehnice\"}}){\n    edges{\n      node{\n          extension\n          publicURL\n          name\n          childImageSharp{\n          fixed(width:200,height:300){\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  }\n}\n`\nconst CataloageContent = React.forwardRef(({ }, ref) => {\n\n  const formatCataloageArr = (cataloageArr) => {\n    const pdfs = cataloageArr.filter(catalog => catalog.node.extension === 'pdf')\n    const images = cataloageArr.filter(catalog => catalog.node.extension === 'png')\n\n    const cataloage = pdfs.map(pdf => {\n      const myImage = images.filter(image => image.node.name === pdf.node.name)[0]\n\n      return {\n        image: myImage ? myImage.node : { childImageSharp: { fixed: null } },\n        pdf: myImage ? pdf.node.publicURL : null,\n        primary: myImage ? pdf.node.name : null\n      }\n    })\n\n    return cataloage\n  }\n  const { cataloageBaie, cataloageBucatarie, cataloageMobila, pardoseli, solutiiTehnice } = useStaticQuery(cataloage)\n  const [cataloageArr] = useState(() => {\n    const cataloageBaieArr = formatCataloageArr(cataloageBaie.edges)\n\n    const cataloageBucatarieArr = formatCataloageArr(cataloageBucatarie.edges)\n\n    const cataloageMobilaArr = formatCataloageArr(cataloageMobila.edges)\n\n    const cataloagePardoseliArr = formatCataloageArr(pardoseli.edges)\n\n\n    const cataloageTehniceArr = formatCataloageArr(solutiiTehnice.edges)\n    return {\n      cataloageBaie: cataloageBaieArr,\n      cataloageBucatarie: cataloageBucatarieArr,\n      cataloageMobila: cataloageMobilaArr,\n      cataloagePardoseli: cataloagePardoseliArr,\n      cataloageTehnice: cataloageTehniceArr\n    }\n  })\n\n  return (\n    <div ref={ref} className=\"cataloage-content\">\n      <CataloageCategory cataloage={cataloageArr.cataloageBaie} name=\"Baie\" id=\"baie\" />\n      <CataloageCategory cataloage={cataloageArr.cataloageBucatarie} name=\"Bucatarie\" id=\"bucatarie\" />\n      <CataloageCategory cataloage={cataloageArr.cataloageMobila} name=\"Mobila\" id=\"mobila\" />\n      <CataloageCategory cataloage={cataloageArr.cataloagePardoseli} name=\"Pardoseli, Gresie si Faianta\" id=\"pardoseli\" />\n      <CataloageCategory cataloage={cataloageArr.cataloageTehnice} name=\"Solutii tehnice\" />\n    </div>\n  )\n}\n)\n\n\nexport default CataloageContent","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React, { useState, useEffect, useRef } from 'react'\nimport Header from '../components/Header'\nimport Navigation from '../components/Navigation'\nimport Layout from '../components/Layout'\nimport CataloageContent from '../components/Cataloage/CataloageContent'\n\nexport default props => {\n  const [scrollTop, setScrollTop] = useState(0);\n  const scrollRef = useRef()\n\n  useEffect(() => {\n    const onScroll = e => {\n      setScrollTop(e.target.documentElement.scrollTop);\n    };\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [scrollTop]);\n\n  return (\n    <Layout>\n      <Header image={props.data.cataloageHeader.childImageSharp.fluid} className=\"header-cataloage\">\n        <div className=\"header-cataloage_content\">\n          <Navigation className=\"navigation-cataloage\" />\n          <div className=\"header-filter\" id=\"header-filter\"></div>\n          <p>COLECȚIILE PORCELANOSA</p>\n        </div>\n      </Header>\n      {\n        scrollRef.current && (scrollTop >= 200) && <div style={{ position: \"absolute\", top: \"0px\" }}>\n          <Navigation />\n        </div>\n      }\n      <CataloageContent ref={scrollRef} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n{\n    cataloageHeader:file(relativePath:{eq:\"cataloage-header.png\"}){\n        childImageSharp{\n          fluid(maxWidth:1600){\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n            \n}\n`"],"sourceRoot":""}